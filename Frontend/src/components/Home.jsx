import React, { useEffect, useState } from "react";
import {
  ArrowRight,
  Brain,
  Target,
  Globe,
  ChevronDown,
  Terminal,
  Award,
  Users,
  Star,
  Sparkles,
  Zap,
} from "lucide-react";
import ChatBot from "./ChatBot";

export default function HomePage() {
  const [isVisible, setIsVisible] = useState(false);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });

  // Mouse tracking for interactive effects
  useEffect(() => {
    const handleMouseMove = (e) => {
      setMousePosition({ x: e.clientX, y: e.clientY });
    };
    window.addEventListener("mousemove", handleMouseMove);
    return () => window.removeEventListener("mousemove", handleMouseMove);
  }, []);

  // Scroll animation handler
  useEffect(() => {
    const handleScroll = () => {
      const currentScrollPos = window.pageYOffset;
      setIsVisible(currentScrollPos > 100);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const handleCheckUserSigIn = () => {
    const token = localStorage.getItem("token");
    if (token) {
      window.location.href = "/quiz";
    } else {
      window.location.href = "/signup";
    }
  };

  const features = [
    {
      icon: <Brain className="w-8 h-8" />,
      title: "AI-Powered Questions",
      description:
        "Experience dynamic quizzes generated by advanced AI algorithms that understand your learning patterns.",
      color: "from-cyan-400 via-blue-500 to-purple-600",
      shadowColor: "shadow-cyan-500/30",
    },
    {
      icon: <Target className="w-8 h-8" />,
      title: "Adaptive Learning",
      description:
        "Questions adapt to your skill level for optimal learning progression and maximum retention.",
      color: "from-pink-400 via-purple-500 to-indigo-600",
      shadowColor: "shadow-purple-500/30",
    },
    {
      icon: <Globe className="w-8 h-8" />,
      title: "Global Community",
      description:
        "Connect and compete with learners worldwide in real-time challenges and leaderboards.",
      color: "from-emerald-400 via-teal-500 to-cyan-600",
      shadowColor: "shadow-emerald-500/30",
    },
  ];

  const stats = [
    {
      icon: <Users className="w-8 h-8" />,
      value: "10K+",
      label: "Active Users",
      color: "from-blue-400 to-cyan-500",
    },
    {
      icon: <Terminal className="w-8 h-8" />,
      value: "50K+",
      label: "Questions",
      color: "from-purple-400 to-pink-500",
    },
    {
      icon: <Award className="w-8 h-8" />,
      value: "95%",
      label: "Success Rate",
      color: "from-emerald-400 to-teal-500",
    },
  ];

  return (
    <div className="flex flex-col min-h-screen bg-gradient-to-br from-[#1a1f37] to-[#2c3250] relative overflow-hidden z-45">
      {/* Animated Background Elements */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-40 -right-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-cyan-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse delay-500"></div>
      </div>

      {/* Floating particles effect */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {[...Array(20)].map((_, i) => (
          <div
            key={i}
            className="absolute w-2 h-2 bg-gradient-to-r from-cyan-400 to-purple-400 rounded-full opacity-30"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animation: `float ${3 + Math.random() * 4}s ease-in-out infinite`,
              animationDelay: `${Math.random() * 2}s`,
            }}
          />
        ))}
      </div>

      {/* Hero Section */}
      <header className="relative min-h-screen flex items-center">
        <div className="container mx-auto px-6 py-24 relative z-10">
          <div className="flex flex-col lg:flex-row items-center gap-16">
            <div className="flex-1 text-center lg:text-left max-w-3xl">
              {/* Badge */}
              <div className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-cyan-500/10 to-purple-500/10 border border-cyan-500/20 backdrop-blur-xl mb-8">
                <Sparkles className="w-4 h-4 text-cyan-400" />
                <span className="text-sm text-cyan-300 font-medium">
                  AI-Powered Learning Platform
                </span>
                <Star className="w-4 h-4 text-yellow-400 animate-pulse" />
              </div>

              <h1 className="text-6xl lg:text-8xl font-black mb-8 leading-tight">
                <span className="text-white">Quiz Smarter</span>
                <br />
                <span className="text-white">with </span>
                <span className="bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500 text-transparent bg-clip-text animate-pulse">
                  BrainQuest
                </span>
              </h1>

              <p className="text-xl lg:text-2xl text-slate-300 mb-12 max-w-2xl leading-relaxed">
                Embark on an extraordinary journey of knowledge with
                <span className="text-cyan-400 font-semibold">
                  {" "}
                  AI-powered quizzes
                </span>{" "}
                that adapt to your learning style and help you achieve mastery
                like never before.
              </p>

              <div className="flex flex-col sm:flex-row gap-6 justify-center lg:justify-start">
                <button
                  onClick={handleCheckUserSigIn}
                  className="group relative overflow-hidden bg-gradient-to-r from-cyan-500 via-purple-500 to-pink-500 text-white font-bold px-10 py-5 rounded-2xl hover:shadow-2xl hover:shadow-purple-500/50 transition-all duration-500 transform hover:scale-105"
                >
                  <div className="absolute inset-0 bg-gradient-to-r from-pink-500 via-purple-500 to-cyan-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                  <div className="relative flex items-center justify-center gap-3">
                    <Zap className="w-5 h-5 group-hover:animate-bounce" />
                    Get Started Free
                    <ArrowRight className="w-5 h-5 group-hover:translate-x-2 transition-transform duration-300" />
                  </div>
                </button>

                <a
                  href="#features"
                  className="group flex items-center justify-center gap-3 text-slate-300 hover:text-white px-10 py-5 rounded-2xl border-2 border-slate-600/50 hover:border-cyan-400/50 bg-slate-800/20 backdrop-blur-xl hover:bg-slate-700/30 transition-all duration-300"
                >
                  <span className="font-semibold">Explore Features</span>
                  <ChevronDown className="w-5 h-5 animate-bounce group-hover:translate-y-1 transition-transform" />
                </a>
              </div>
            </div>

            {/* Animated Hero Visual - CSS Only */}
            <div className="flex-1 relative">
              <div className="relative w-full aspect-square max-w-lg mx-auto">
                {/* Central rotating element */}
                <div className="absolute inset-0 bg-gradient-to-r from-cyan-500/20 to-purple-500/20 rounded-full blur-3xl animate-pulse"></div>

                {/* Animated geometric shapes */}
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="relative w-64 h-64">
                    {/* Outer rotating ring */}
                    <div className="absolute inset-0 border-4 border-gradient-to-r from-cyan-400 to-purple-500 rounded-full animate-spin-slow opacity-30"></div>

                    {/* Middle rotating ring */}
                    <div className="absolute inset-8 border-2 border-gradient-to-r from-pink-400 to-cyan-400 rounded-full animate-reverse-spin opacity-50"></div>

                    {/* Inner pulsing core */}
                    <div className="absolute inset-16 bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500 rounded-full animate-pulse shadow-2xl shadow-purple-500/50"></div>

                    {/* Floating orbs */}
                    {[...Array(8)].map((_, i) => (
                      <div
                        key={i}
                        className="absolute w-4 h-4 bg-gradient-to-r from-cyan-400 to-purple-400 rounded-full animate-float"
                        style={{
                          top: `${50 + 40 * Math.sin((i * Math.PI) / 4)}%`,
                          left: `${50 + 40 * Math.cos((i * Math.PI) / 4)}%`,
                          animationDelay: `${i * 0.2}s`,
                        }}
                      />
                    ))}
                  </div>
                </div>

                {/* Brain icon in center */}
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500 p-6 rounded-2xl shadow-2xl shadow-purple-500/50 animate-pulse">
                    <Brain className="w-12 h-12 text-white" />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </header>

      {/* Features Section */}
      <section id="features" className="py-32 relative">
        <div className="absolute inset-0 bg-gradient-to-b from-transparent via-slate-800/50 to-transparent"></div>
        <div className="container mx-auto px-6 relative z-10">
          <div className="text-center mb-20">
            <div className="inline-flex items-center gap-2 px-6 py-3 rounded-full bg-gradient-to-r from-purple-500/10 to-cyan-500/10 border border-purple-500/20 backdrop-blur-xl mb-8">
              <Star className="w-5 h-5 text-yellow-400" />
              <span className="text-purple-300 font-medium">Why Choose Us</span>
            </div>

            <h2 className="text-5xl lg:text-6xl font-black text-white mb-6">
              Unleash Your
              <span className="bg-gradient-to-r from-cyan-400 to-purple-500 text-transparent bg-clip-text">
                {" "}
                Potential
              </span>
            </h2>
            <p className="text-xl text-slate-300 max-w-4xl mx-auto leading-relaxed">
              Experience the future of learning with our cutting-edge features
              designed to transform your knowledge journey into an exciting
              adventure.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-20">
            {features.map((feature, index) => (
              <div
                key={index}
                className={`group relative p-8 rounded-3xl bg-gradient-to-br from-slate-800/50 to-slate-900/50 backdrop-blur-xl border border-slate-700/50 hover:border-slate-600/50 transition-all duration-500 hover:transform hover:scale-105 hover:${feature.shadowColor} hover:shadow-2xl`}
              >
                <div className="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

                <div className="relative z-10">
                  <div
                    className={`w-20 h-20 mb-8 rounded-2xl bg-gradient-to-r ${feature.color} flex items-center justify-center shadow-lg transform group-hover:scale-110 transition-transform duration-500`}
                  >
                    <div className="text-white">{feature.icon}</div>
                  </div>

                  <h3 className="text-2xl font-bold text-white mb-4 group-hover:text-cyan-300 transition-colors duration-300">
                    {feature.title}
                  </h3>
                  <p className="text-slate-300 leading-relaxed group-hover:text-slate-200 transition-colors duration-300">
                    {feature.description}
                  </p>
                </div>
              </div>
            ))}
          </div>

          {/* Stats Section */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {stats.map((stat, index) => (
              <div
                key={index}
                className="group text-center p-10 rounded-3xl bg-gradient-to-br from-slate-800/30 to-slate-900/30 backdrop-blur-xl border border-slate-700/30 hover:border-slate-600/50 transition-all duration-500 hover:transform hover:scale-105"
              >
                <div
                  className={`w-20 h-20 rounded-2xl bg-gradient-to-r ${stat.color} flex items-center justify-center mx-auto mb-6 shadow-lg group-hover:shadow-xl transition-all duration-500`}
                >
                  <div className="text-white">{stat.icon}</div>
                </div>
                <div className="text-5xl font-black text-white mb-3 group-hover:scale-110 transition-transform duration-300">
                  {stat.value}
                </div>
                <div className="text-slate-400 text-lg font-medium group-hover:text-slate-300 transition-colors duration-300">
                  {stat.label}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="relative bg-gradient-to-t from-slate-900 to-slate-800/50 backdrop-blur-xl border-t border-slate-700/50">
        <div className="container mx-auto px-6 py-16">
          <div className="flex flex-col lg:flex-row justify-between items-center gap-12">
            <div className="text-center lg:text-left">
              <h3 className="text-4xl font-black bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500 text-transparent bg-clip-text mb-4">
                BrainQuest
              </h3>
              <p className="text-slate-400 text-lg">
                &copy; {new Date().getFullYear()} BrainQuest. All rights
                reserved.
              </p>
              <p className="text-slate-500 mt-2">
                Empowering minds through intelligent learning.
              </p>
            </div>

            <div className="flex gap-6">
              {[
                {
                  name: "Facebook",
                  color: "from-blue-500 to-blue-600",
                  symbol: "f",
                },
                {
                  name: "Instagram",
                  color: "from-pink-500 to-purple-600",
                  symbol: "ig",
                },
                {
                  name: "LinkedIn",
                  color: "from-blue-600 to-indigo-600",
                  symbol: "in",
                },
              ].map((social, index) => (
                <a
                  key={index}
                  href="#"
                  className={`group w-14 h-14 rounded-2xl bg-gradient-to-r ${social.color} flex items-center justify-center hover:shadow-lg transition-all duration-300 transform hover:scale-110`}
                >
                  <span className="text-white font-bold text-lg group-hover:scale-110 transition-transform duration-300">
                    {social.symbol}
                  </span>
                </a>
              ))}
            </div>
          </div>
        </div>
      </footer>

      <style jsx>{`
        @keyframes float {
          0%,
          100% {
            transform: translateY(0px) rotate(0deg);
          }
          50% {
            transform: translateY(-20px) rotate(10deg);
          }
        }

        @keyframes spin-slow {
          from {
            transform: rotate(0deg);
          }
          to {
            transform: rotate(360deg);
          }
        }

        @keyframes reverse-spin {
          from {
            transform: rotate(360deg);
          }
          to {
            transform: rotate(0deg);
          }
        }

        .animate-spin-slow {
          animation: spin-slow 8s linear infinite;
        }

        .animate-reverse-spin {
          animation: reverse-spin 6s linear infinite;
        }

        .animate-float {
          animation: float 3s ease-in-out infinite;
        }
      `}</style>
      <ChatBot />
    </div>
  );
}
